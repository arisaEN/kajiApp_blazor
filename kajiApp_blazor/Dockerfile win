# ベースランタイム
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 2000
#EXPOSE 8080
#EXPOSE 8081

# SDKイメージ（ビルド用）
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# 各プロジェクトの .csproj をコピー
COPY ["kajiApp_blazor/kajiApp_blazor.csproj", "kajiApp_blazor/"]
COPY ["kajiapp.Domain/kajiapp.Domain.csproj", "kajiapp.Domain/"]
COPY ["kajiapp.Infra/kajiapp.Infra.csproj", "kajiapp.Infra/"]

# ✅ SQLite ファイルを Docker ビルド環境へコピー
COPY "kajiApp_blazor/database.db" "./database.db"

# パッケージ復元
RUN dotnet restore "kajiApp_blazor/kajiApp_blazor.csproj"

# ソースコードすべてコピー
COPY . .

# ビルド
WORKDIR "/src/kajiApp_blazor"
RUN dotnet build "kajiApp_blazor.csproj" -c $BUILD_CONFIGURATION -o /app/build

# パブリッシュ
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "kajiApp_blazor.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# 最終ステージ
FROM base AS final
WORKDIR /app

COPY --from=publish /app/publish .
COPY --from=build /src/database.db ./database.db

# 実行
ENTRYPOINT ["dotnet", "kajiApp_blazor.dll"]
