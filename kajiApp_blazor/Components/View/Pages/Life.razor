@page "/life"
@using kajiApp_blazor.Components.View.Component.LifeComponent
@using kajiApp_blazor.Components.DTO.LifeModel
@using kajiApp_blazor.Components.ViewModel.LifeDBC
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@using kajiApp_blazor.Components
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IConfiguration Configuration

<BlazoredToasts Position="ToastPosition.BottomRight" Timeout="5" />
<div class="container-fluid m-0 p-0 bg-black min-vh-100 text-white">
<h1 class="text-center py-1">
    <i class="fas fa-wallet"></i> 生活費記録一覧
</h1>
    <LifeRecordList LifeRecord="liferecord"  />
</div>

@code {
    private List<LifeRecord>? liferecord = null;

    //非同期で実績リスト取得
    protected override async Task OnInitializedAsync()
    {
        //家事実績リストをDBから持ってくる。入力フォームさえできてればOKなので非同期で取得する
        _ = LoadLifeAsync();
    }
    /// <summary>
    ///Eatリスト取得非同期
    /// </summary>
    /// <returns></returns>
    private async Task LoadLifeAsync()
    {
        var lifeRecordShow = new ViewModel.LifeDBC.LifeRecordShow();
        liferecord = await lifeRecordShow.GetLifeAsync();
        if (liferecord != null)
        {
            //worklistに値が入ったらUI更新
            await InvokeAsync(StateHasChanged);
        }
    }
}