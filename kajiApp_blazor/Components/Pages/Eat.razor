@page "/eat"
@using kajiApp_blazor.Components.Component.EatComponent
@using kajiApp_blazor.Components.Models.EatModel
@using kajiApp_blazor.Components.DatabaseContext.EatDBC
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@using kajiApp_blazor.Components
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IConfiguration Configuration


    <div class="px-3">
        <EatRecordList EatRecord="eatrecord"  />
    </div>

@code {
    private List<Models.EatModel.EatRecord>? eatrecord = null;

    //非同期で実績リスト取得
    protected override async Task OnInitializedAsync()
    {
        //家事実績リストをDBから持ってくる。入力フォームさえできてればOKなので非同期で取得する
        _ = LoadEatAsync();
    }
    /// <summary>
    ///Eatリスト取得非同期
    /// </summary>
    /// <returns></returns>
    private async Task LoadEatAsync()
    {
        var eatRecordShow = new DatabaseContext.EatDBC.EatRecordShow();
        eatrecord = await eatRecordShow.GetEatAsync();
        if (eatrecord != null)
        {
            //worklistに値が入ったらUI更新
            await InvokeAsync(StateHasChanged);
        }
    }


    
}